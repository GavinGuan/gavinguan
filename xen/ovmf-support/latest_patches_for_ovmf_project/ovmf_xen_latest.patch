diff -r 42edf1481c57 tools/firmware/hvmloader/Makefile
--- a/tools/firmware/hvmloader/Makefile	Fri Jul 22 08:55:19 2011 +0100
+++ b/tools/firmware/hvmloader/Makefile	Mon Aug 01 22:51:22 2011 +0800
@@ -43,6 +43,19 @@
 CFLAGS += -DENABLE_ROMBIOS
 ROMBIOS_ROM := $(ROMBIOS_DIR)/BIOS-bochs-latest
 endif
+OVMF_DIR :=  ../ovmf
+OVMF32_ROM := $(OVMF_DIR)/ovmf-ia32.bin
+OVMF64_ROM := $(OVMF_DIR)/ovmf-x64.bin
+OVMF32_CIRRUS_VGA_ROM := $(OVMF_DIR)/ovmf-ia32-cirrus-vga.bin
+OVMF64_CIRRUS_VGA_ROM := $(OVMF_DIR)/ovmf-x64-cirrus-vga.bin
+
+ifneq ($(OVMF32_ROM),)
+OBJS += ovmf.o
+endif
+
+ifneq ($(OVMF64_ROM),)
+OBJS += ovmf.o
+endif
 
 ifneq ($(SEABIOS_DIR),)
 OBJS += seabios.o
@@ -69,7 +82,7 @@
 	$(OBJCOPY) hvmloader.tmp hvmloader
 	rm -f hvmloader.tmp
 
-roms.inc: $(ROMBIOS_ROM) $(SEABIOS_ROM) $(STDVGA_ROM) $(CIRRUSVGA_ROM) ../etherboot/eb-roms.h
+roms.inc: $(ROMBIOS_ROM) $(SEABIOS_ROM) $(STDVGA_ROM) $(CIRRUSVGA_ROM) $(OVMF32_ROM) $(OVMF64_ROM) $(OVMF32_CIRRUS_VGA_ROM) $(OVMF64_CIRRUS_VGA_ROM) ../etherboot/eb-roms.h
 	echo "/* Autogenerated file. DO NOT EDIT */" > $@.new
 
 ifneq ($(ROMBIOS_ROM),)
@@ -84,6 +97,30 @@
 	echo "#endif" >> $@.new
 endif
 
+ifneq ($(OVMF32_ROM),)
+	echo "#ifdef ROM_INCLUDE_OVMF32" >> $@.new
+	sh ./mkhex ovmf32 $(OVMF32_ROM) >> $@.new
+	echo "#endif" >> $@.new	
+endif 
+
+ifneq ($(OVMF64_ROM),)
+	echo "#ifdef ROM_INCLUDE_OVMF64" >> $@.new
+	sh ./mkhex ovmf64 $(OVMF64_ROM) >> $@.new
+	echo "#endif" >> $@.new	
+endif 
+
+ifneq ($(OVMF32_CIRRUS_VGA_ROM),)
+	echo "#ifdef ROM_INCLUDE_OVMF32_CIRRUS_VGA" >> $@.new
+	sh ./mkhex ovmf32_cirrus_vga $(OVMF32_CIRRUS_VGA_ROM) >> $@.new
+	echo "#endif" >> $@.new
+endif 
+
+ifneq ($(OVMF64_CIRRUS_VGA_ROM),)
+	echo "#ifdef ROM_INCLUDE_OVMF64_CIRRUS_VGA" >> $@.new
+	sh ./mkhex ovmf64_cirrus_vga $(OVMF64_CIRRUS_VGA_ROM) >> $@.new
+	echo "#endif" >> $@.new	
+endif 
+
 ifneq ($(STDVGA_ROM),)
 	echo "#ifdef ROM_INCLUDE_VGABIOS" >> $@.new
 	sh ./mkhex vgabios_stdvga $(STDVGA_ROM) >> $@.new
diff -r 42edf1481c57 tools/firmware/hvmloader/config.h
--- a/tools/firmware/hvmloader/config.h	Fri Jul 22 08:55:19 2011 +0100
+++ b/tools/firmware/hvmloader/config.h	Mon Aug 01 22:51:22 2011 +0800
@@ -3,7 +3,7 @@
 
 #include <stdint.h>
 
-enum virtual_vga { VGA_none, VGA_std, VGA_cirrus, VGA_pt };
+enum virtual_vga { VGA_none, VGA_std, VGA_cirrus, VGA_pt, VGA_custom };
 extern enum virtual_vga virtual_vga;
 
 struct bios_config {
@@ -16,6 +16,9 @@
     /* Physical address to load at */
     unsigned int bios_address;
 
+    /* Custom load function. */
+    void (*load)(const struct bios_config *config);
+
     /* ROMS */
     int load_roms;
     unsigned int optionrom_start, optionrom_end;
@@ -27,6 +30,7 @@
 
     void (*vm86_setup)(void);
     void (*e820_setup)(void);
+    void (*pci_setup)(void);
 
     void (*acpi_build_tables)(void);
     void (*create_mp_tables)(void);
@@ -36,6 +40,8 @@
 
 extern struct bios_config rombios_config;
 extern struct bios_config seabios_config;
+extern struct bios_config ovmf32_config;
+extern struct bios_config ovmf64_config;
 
 #define PAGE_SHIFT 12
 #define PAGE_SIZE  (1ul << PAGE_SHIFT)
diff -r 42edf1481c57 tools/firmware/hvmloader/hvmloader.c
--- a/tools/firmware/hvmloader/hvmloader.c	Fri Jul 22 08:55:19 2011 +0100
+++ b/tools/firmware/hvmloader/hvmloader.c	Mon Aug 01 22:51:22 2011 +0800
@@ -360,6 +360,8 @@
 #ifdef ENABLE_SEABIOS
     { "seabios", &seabios_config, },
 #endif
+    { "ovmf-ia32", &ovmf32_config, },
+    { "ovmf-x64", &ovmf64_config, },
     { NULL, NULL }
 };
 
@@ -402,7 +404,11 @@
     printf("CPU speed is %u MHz\n", get_cpu_mhz());
 
     apic_setup();
-    pci_setup();
+    if (bios->pci_setup) {
+        bios->pci_setup();
+    } else {
+    	pci_setup();
+    }
 
     smp_initialise();
 
@@ -417,8 +423,12 @@
     }
 
     printf("Loading %s ...\n", bios->name);
-    memcpy((void *)bios->bios_address, bios->image,
-           bios->image_size);
+    if (bios->load) {
+        bios->load(bios);
+    } else {
+        memcpy((void *)bios->bios_address, bios->image,
+               bios->image_size);
+    }
 
     if (bios->bios_relocate)
         bios->bios_relocate();
@@ -451,6 +461,8 @@
             vgabios_sz = round_option_rom(
                 (*(uint8_t *)(VGABIOS_PHYSICAL_ADDRESS+2)) * 512);
             break;
+        case VGA_custom:
+            break;
         default:
             printf("No emulated VGA adaptor ...\n");
             break;
diff -r 42edf1481c57 tools/firmware/hvmloader/util.c
--- a/tools/firmware/hvmloader/util.c	Fri Jul 22 08:55:19 2011 +0100
+++ b/tools/firmware/hvmloader/util.c	Mon Aug 01 22:51:22 2011 +0800
@@ -303,12 +303,54 @@
     *p = '\0';
 }
 
+/*
+ * Ensures mfn is backed by an accessible RAM page.
+ * Returns 0 on success.
+ */
+int mem_back_ram(xen_pfn_t mfn)
+{
+    struct xen_add_to_physmap xatp;
+    struct xen_memory_reservation xmr;
+    static int over_allocated = 0;
+
+    if ( !over_allocated )
+    {
+        xmr.domid = DOMID_SELF;
+        xmr.mem_flags = 0;
+        xmr.extent_order = 0;
+        xmr.nr_extents = 1;
+        set_xen_guest_handle(xmr.extent_start, &mfn);
+        if ( hypercall_memory_op(XENMEM_populate_physmap, &xmr) == 1 )
+            return 0;
+        over_allocated = 1;
+    }
+
+    /*
+     * Couldn't allocate more memory for domain,
+     * move an existing physical page from end
+     * of RAM.
+     */
+    if ( hvm_info->high_mem_pgend )
+    {
+        xatp.idx = --hvm_info->high_mem_pgend;
+        if ( xatp.idx == (1ull << (32 - PAGE_SHIFT)) )
+            hvm_info->high_mem_pgend = 0;
+    }
+    else
+    {
+        xatp.idx = --hvm_info->low_mem_pgend;
+    }
+    xatp.domid = DOMID_SELF;
+    xatp.space = XENMAPSPACE_gmfn;
+    xatp.gpfn  = mfn;
+    if ( hypercall_memory_op(XENMEM_add_to_physmap, &xatp) != 0 )
+        BUG();
+    return 0;
+}
+
 void *mem_alloc(uint32_t size, uint32_t align)
 {
     static uint32_t reserve = RESERVED_MEMBASE - 1;
-    static int over_allocated;
-    struct xen_add_to_physmap xatp;
-    struct xen_memory_reservation xmr;
     xen_pfn_t mfn;
     uint32_t s, e;
 
@@ -326,35 +368,7 @@
         reserve += PAGE_SIZE;
         mfn = reserve >> PAGE_SHIFT;
 
-        /* Try to allocate a brand new page in the reserved area. */
-        if ( !over_allocated )
-        {
-            xmr.domid = DOMID_SELF;
-            xmr.mem_flags = 0;
-            xmr.extent_order = 0;
-            xmr.nr_extents = 1;
-            set_xen_guest_handle(xmr.extent_start, &mfn);
-            if ( hypercall_memory_op(XENMEM_populate_physmap, &xmr) == 1 )
-                continue;
-            over_allocated = 1;
-        }
-
-        /* Otherwise, relocate a page from the ordinary RAM map. */
-        if ( hvm_info->high_mem_pgend )
-        {
-            xatp.idx = --hvm_info->high_mem_pgend;
-            if ( xatp.idx == (1ull << (32 - PAGE_SHIFT)) )
-                hvm_info->high_mem_pgend = 0;
-        }
-        else
-        {
-            xatp.idx = --hvm_info->low_mem_pgend;
-        }
-        xatp.domid = DOMID_SELF;
-        xatp.space = XENMAPSPACE_gmfn;
-        xatp.gpfn  = mfn;
-        if ( hypercall_memory_op(XENMEM_add_to_physmap, &xatp) != 0 )
-            BUG();
+        BUG_ON(mem_back_ram(mfn));
     }
 
     reserve = e;
@@ -624,22 +638,24 @@
     return table;
 }
 
-struct shared_info *get_shared_info(void) 
+static struct shared_info *shared_info = NULL;
+
+struct shared_info *get_shared_info(void)
 {
-    static struct shared_info *shared_info = NULL;
     struct xen_add_to_physmap xatp;
 
     if ( shared_info != NULL )
         return shared_info;
 
+    /* Guarantee shinfo lives in a safe (reserved) place */
+    shared_info = mem_alloc(PAGE_SIZE, PAGE_SIZE);
+
     xatp.domid = DOMID_SELF;
     xatp.space = XENMAPSPACE_shared_info;
     xatp.idx   = 0;
-    xatp.gpfn  = 0xfffffu;
-    shared_info = (struct shared_info *)(xatp.gpfn << PAGE_SHIFT);
+    xatp.gpfn  = ((uint32_t) shared_info) >> PAGE_SHIFT;
     if ( hypercall_memory_op(XENMEM_add_to_physmap, &xatp) != 0 )
         BUG();
-
     return shared_info;
 }
 
diff -r 42edf1481c57 tools/firmware/hvmloader/util.h
--- a/tools/firmware/hvmloader/util.h	Fri Jul 22 08:55:19 2011 +0100
+++ b/tools/firmware/hvmloader/util.h	Mon Aug 01 22:51:22 2011 +0800
@@ -3,6 +3,7 @@
 
 #include <stdarg.h>
 #include <stdint.h>
+#include <xen/memory.h>
 #include <xen/hvm/hvm_info_table.h>
 
 #define __STR(...) #__VA_ARGS__
@@ -164,6 +165,9 @@
 int printf(const char *fmt, ...) __attribute__ ((format (printf, 1, 2)));
 int vprintf(const char *fmt, va_list ap);
 
+/* Create RAM backing for guest machine frame. */
+int mem_back_ram(xen_pfn_t mfn);
+
 /* Allocate memory in a reserved region below 4GB. */
 void *mem_alloc(uint32_t size, uint32_t align);
 #define virt_to_phys(v) ((unsigned long)(v))
diff -r 42edf1481c57 tools/libxl/libxl.idl
--- a/tools/libxl/libxl.idl	Fri Jul 22 08:55:19 2011 +0100
+++ b/tools/libxl/libxl.idl	Mon Aug 01 22:51:22 2011 +0800
@@ -137,6 +137,7 @@
 
 libxl_domain_create_info = Struct("domain_create_info",[
     ("type",         libxl_domain_type),
+    ("hvmbios",      string),
     ("hap",          bool),
     ("oos",          bool),
     ("ssidref",      uint32),
diff -r 42edf1481c57 tools/libxl/libxl_create.c
--- a/tools/libxl/libxl_create.c	Fri Jul 22 08:55:19 2011 +0100
+++ b/tools/libxl/libxl_create.c	Mon Aug 01 22:51:22 2011 +0800
@@ -407,6 +407,10 @@
     if (info->poolname)
         xs_write(ctx->xsh, t, libxl__sprintf(gc, "%s/pool_name", vm_path), info->poolname, strlen(info->poolname));
 
+    if (info->hvmbios){
+        xs_write(ctx->xsh, t, libxl__sprintf(gc, "%s/hvmloader/bios", dom_path), info->hvmbios, strlen(info->hvmbios));
+    }
+
     libxl__xs_writev(gc, t, dom_path, info->xsdata);
     libxl__xs_writev(gc, t, libxl__sprintf(gc, "%s/platform", dom_path), info->platformdata);
 
diff -r 42edf1481c57 tools/libxl/libxl_dm.c
--- a/tools/libxl/libxl_dm.c	Fri Jul 22 08:55:19 2011 +0100
+++ b/tools/libxl/libxl_dm.c	Mon Aug 01 22:51:22 2011 +0800
@@ -804,6 +804,7 @@
     char *vm_path;
     char **pass_stuff;
     const char *dm;
+    char *custom_bios;
 
     if (info->device_model_stubdomain) {
         libxl_device_vfb vfb;
@@ -835,10 +836,13 @@
         goto out;
     }
 
-    path = libxl__sprintf(gc, "/local/domain/%d/hvmloader", info->domid);
-    xs_mkdir(ctx->xsh, XBT_NULL, path);
-    libxl__xs_write(gc, XBT_NULL, libxl__sprintf(gc, "%s/bios", path),
-                    "%s", libxl__domain_bios(gc, info));
+    custom_bios = libxl__xs_read(gc, XBT_NULL, libxl__sprintf(gc, "/local/domain/%d/hvmloader/bios", info->domid));
+    if (!custom_bios) {
+        path = libxl__sprintf(gc, "/local/domain/%d/hvmloader", info->domid);
+        xs_mkdir(ctx->xsh, XBT_NULL, path);
+        libxl__xs_write(gc, XBT_NULL, libxl__sprintf(gc, "%s/bios", path),
+                        "%s", libxl__domain_bios(gc, info));
+    }
 
     path = libxl__sprintf(gc, "/local/domain/0/device-model/%d", info->domid);
     xs_mkdir(ctx->xsh, XBT_NULL, path);
diff -r 42edf1481c57 tools/libxl/xl_cmdimpl.c
--- a/tools/libxl/xl_cmdimpl.c	Fri Jul 22 08:55:19 2011 +0100
+++ b/tools/libxl/xl_cmdimpl.c	Mon Aug 01 22:51:22 2011 +0800
@@ -567,6 +567,10 @@
         }
     }
 
+    if (!xlu_cfg_get_string (config, "hvmbios", &buf)){
+        c_info->hvmbios = strdup(buf);
+    }
+
     c_info->type = LIBXL_DOMAIN_TYPE_PV;
     if (!xlu_cfg_get_string (config, "builder", &buf) &&
         !strncmp(buf, "hvm", strlen(buf)))
